openapi: 3.1.0
info:
  title: atcoder-editorial-problems-api
  version: '1.0'
  description: A definition of AtCoder Editorial Problems API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
security:
  - {}
tags:
  - name: writers
    description: writers of the editorials
  - name: problems
    description: AtCoder problems
paths:
  /writers:
    get:
      tags:
        - writers
      summary: get all writers
      operationId: getWriters
      responses:
        '200':
          description: 'OK: got all writers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/writersResponse'
        4XX:
          description: Client Error
        5XX:
          description: Server Error
  /problems:
    get:
      tags:
        - problems
      summary: get problems with selected writer
      operationId: getProblems
      parameters:
        - name: writer
          in: query
          schema:
            type: string
          description: name of the editorial of the problem
        - name: user
          in: query
          schema:
            type: string
          description: name of user
      responses:
        '200':
          description: 'OK: got problems'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problemsResponse'
        4XX:
          description: Client Error
        5XX:
          description: Server Error
components:
  schemas:
    writersResponse:
      type: array
      items:
        type: string
    Problem:
      type: object
      properties:
        id:
          type: string
          description: problem id with a editorial writer
        contest:
          type: string
          description: contest name
        category:
          type: string
          description: contest category
        name:
          type: string
          description: problem name
        start_epoch_second:
          type: integer
          description: contest start time (UNIX time)
        problem_index:
          type: string
          description: problem index in the contest
        editorial_types:
          type: array
          description: editorial type
          items:
            type: string
        is_experimental:
          type: boolean
          description: whether this problem is experimental
        problem_id:
          type: string
          description: problem id
        difficulty:
          type: integer
          description: problem difficulty
        result_code:
          type: string
          description: result of user submissions
      required:
        - id
        - contest
        - category
        - name
        - start_epoch_second
        - problem_index
        - editorial_types
        - is_experimental
        - problem_id
        - difficulty
    problemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Problem'
